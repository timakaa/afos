// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        Int      @id @default(autoincrement())
  telegramId                Int      @unique
  username                  String?
  coins                     Int      @default(0)
  coinsBalance              Int      @default(0)
  boughtPhotos              Photo[]  @relation("UserBoughtPhotos")
  ratedPhotos               Photo[]  @relation("UserRatedPhotos")
  referrals                 User[]   @relation("Refferals")
  referredBy                User?    @relation("Refferals", fields: [referredById], references: [id])
  referredById              Int?
  tasks                     Task[]
  lastCoinsUpdateTimestamp  DateTime @default(now())
  lastEnergyUpdateTimestamp DateTime @default(now())
  energy                    Int      @default(500)
  multitapLevelIndex        Int      @default(0)
  energyLimitIndex          Int      @default(0)
  createdAt                 DateTime @default(now())
}

model Task {
  id             Int    @id @default(autoincrement())
  name           String @unique
  reward         Int
  usersCompleted User[]
}

model Photo {
  id          Int    @id @default(autoincrement())
  defaultUrl  String
  nakedUrl    String
  name        String
  price       Int
  rating      Int    @default(0)
  ratingStore Int[]  @default([])
  reviews     Int    @default(0)
  usersBought User[] @relation("UserBoughtPhotos")
  usersRated  User[] @relation("UserRatedPhotos")
}
